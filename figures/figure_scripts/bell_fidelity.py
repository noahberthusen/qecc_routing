import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import os
import matplotlib.ticker as mticker

full_path = os.path.realpath(__file__)
path, filename = os.path.split(full_path)


# arr = np.array([(4, 0.49577464788732395, 0.004295749734674281, 0.98935),
#  (6, 0.5016077170418006, 0.0037279699324495913, 0.98445),
#  (8, 0.5072815533980582, 0.003726771492750664, 0.9794),
#  (10, 0.49300155520995337, 0.003890052141068276, 0.97428),
#  (12, 0.5042428198433421, 0.003992324832879425, 0.96936),
#  (14, 0.502093217973765, 0.0040656730659530994, 0.96417),
#  (16, 0.517198404785643, 0.00450056257032129, 0.95988),
#  (18, 0.4924645390070922, 0.004346095844504022, 0.95488),
#  (20, 0.4986528098537336, 0.004177038943504493, 0.94804),
#  (22, 0.5050993022007515, 0.004671065871561577, 0.94411),
#  (24, 0.49563642351391407, 0.004578023358565695, 0.93927),
#  (26, 0.4938013442867812, 0.004629976957290606, 0.93305),
#  (28, 0.4945722970039079, 0.005650385107045794, 0.93091),
#  (30, 0.4895625581704561, 0.005276873668616659, 0.92479),
#  (32, 0.4973828673560577, 0.00639057363264509, 0.92167),
#  (34, 0.4972806810120596, 0.005625832950995171, 0.91542),
#  (36, 0.5002244165170556, 0.00625768487616371, 0.91088),
#  (38, 0.5004819535182606, 0.007301765880237804, 0.90663),
#  (40, 0.5038402457757296, 0.006793372859755084, 0.90235),
#  (42, 0.49624654286843145, 0.007343450976901509, 0.89876),
#  (44, 0.49911668991166896, 0.00719368031822511, 0.89245),
#  (46, 0.5071866703286643, 0.007858369725069323, 0.89077),
#  (48, 0.5073355003074761, 0.00845210286965255, 0.88617),
#  (50, 0.5022462562396006, 0.008092748351898158, 0.8798)])
muls001 = np.array([0,0,0,0,2.83437563,0,2.71543645,0,2.66390109,0,2.47514626,0,2.63554603,0,2.8225308,0,3.20738319,0,3.05384743,0,3.01289603,0,3.30535152,0,3.46853617,0,3.30472058,0,3.34178504,0,3.69494846,0,3.74955935,0,3.89150943,0,4.29804057,0,4.622713,0,4.64298887,0,4.83355337,0,4.63747826,0,5.44062479,0,5.48444052,0,6.05625242,0,5.75421291,0,6.06743327,0,6.63790984,0,6.33608196,0,7.24417597,0,6.69331914,0,7.44078094,0,7.59173345,0,8.37524776,0,8.38899217,0,8.80930114,0,9.80709627,0,8.87491589,0,9.62782511,0,9.85953381])
muls001 = [x*0.001 for x in muls001 if x]
probs = np.array([0,0,0,0,0.9914,0,0.98695,0,0.98352,0,0.97772,0,0.97513,0,0.97076,0,0.96652,0,0.96272,0,0.95921,0,0.953,0,0.95141,0,0.94713,0,0.94261,0,0.93912,0,0.93611,0,0.9328,0,0.92833,0,0.9237,0,0.92182,0,0.91651,0,0.91429,0,0.91166,0,0.9062,0,0.90485,0,0.90021,0,0.89659,0,0.89486,0,0.89014,0,0.88899,0,0.88297,0,0.87894,0,0.87727,0,0.87281,0,0.87138,0,0.86613,0,0.86468,0,0.86198,0,0.85793,0,0.85501])
probs = [x for x in probs if x]
ts = [(i+1)*2+4 for i,x in enumerate(probs)]

plt.rc('font', family='serif')
# plt.rcParams['xtick.direction'] = 'in'
# plt.rcParams['ytick.direction'] = 'in'
plt.rcParams['axes.linewidth'] = 1

fig, ax1 = plt.subplots(figsize=(5,2.2))

red = [(181/255, 29/255, 20/255)]


ax2 = ax1.twinx()
ax2.ticklabel_format(style='sci', axis='y', scilimits=(-3,-3))
# f = mticker.ScalarFormatter(useOffset=False, useMathText=True)
# g = lambda x,pos : "${}$".format(f._formatSciNotation('%1.10e' % x))
# plt.gca().yaxis.set_major_formatter(mticker.FuncFormatter(g))


ax1.scatter(ts, probs, c='k', marker='.', label="Success prob")
ax2.scatter(ts, muls001, c=red, marker='.', label="LR CNOT error rate")

lines, labels = ax1.get_legend_handles_labels()
lines2, labels2 = ax2.get_legend_handles_labels()

# ax1.legend(loc='lower right')
ax2.legend(lines+lines2, labels+labels2, loc='upper center')

ax1.set_xlabel("Bell chain length")
ax1.set_ylabel("Success probability")
ax2.set_ylabel("Effective CNOT error rate")

plt.savefig(os.path.join(path, f'../bell_fidelity.png'), dpi=1000, transparent=False, bbox_inches='tight')
